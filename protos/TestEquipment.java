// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_equipment.proto

public final class TestEquipment {
  private TestEquipment() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface EquipmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Equipment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 _id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 _id = 1;</code>
     */
    int getId();

    /**
     * <code>optional .Equipment.gearType type = 2;</code>
     */
    boolean hasType();
    /**
     * <code>optional .Equipment.gearType type = 2;</code>
     */
    TestEquipment.Equipment.gearType getType();

    /**
     * <code>optional int32 size = 3;</code>
     */
    boolean hasSize();
    /**
     * <code>optional int32 size = 3;</code>
     */
    int getSize();

    /**
     * <code>optional string serial = 4;</code>
     */
    boolean hasSerial();
    /**
     * <code>optional string serial = 4;</code>
     */
    java.lang.String getSerial();
    /**
     * <code>optional string serial = 4;</code>
     */
    com.google.protobuf.ByteString
        getSerialBytes();

    /**
     * <code>optional string stock_num = 5;</code>
     */
    boolean hasStockNum();
    /**
     * <code>optional string stock_num = 5;</code>
     */
    java.lang.String getStockNum();
    /**
     * <code>optional string stock_num = 5;</code>
     */
    com.google.protobuf.ByteString
        getStockNumBytes();
  }
  /**
   * Protobuf type {@code Equipment}
   */
  public static final class Equipment extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Equipment)
      EquipmentOrBuilder {
    // Use Equipment.newBuilder() to construct.
    private Equipment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Equipment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Equipment defaultInstance;
    public static Equipment getDefaultInstance() {
      return defaultInstance;
    }

    public Equipment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Equipment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              Id_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              TestEquipment.Equipment.gearType value = TestEquipment.Equipment.gearType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              serial_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              stockNum_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestEquipment.internal_static_Equipment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestEquipment.internal_static_Equipment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TestEquipment.Equipment.class, TestEquipment.Equipment.Builder.class);
    }

    public static com.google.protobuf.Parser<Equipment> PARSER =
        new com.google.protobuf.AbstractParser<Equipment>() {
      public Equipment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Equipment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Equipment> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Equipment.gearType}
     */
    public enum gearType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SNOWBOARD = 1;</code>
       */
      SNOWBOARD(0, 1),
      /**
       * <code>ALPINE_SKI = 2;</code>
       */
      ALPINE_SKI(1, 2),
      /**
       * <code>CROSS_COUNTRY_SKI = 3;</code>
       */
      CROSS_COUNTRY_SKI(2, 3),
      /**
       * <code>SNOWSHOES = 4;</code>
       */
      SNOWSHOES(3, 4),
      /**
       * <code>BOOT_SNOWBOARD = 5;</code>
       */
      BOOT_SNOWBOARD(4, 5),
      /**
       * <code>BOOT_ALPINE_SKI = 6;</code>
       */
      BOOT_ALPINE_SKI(5, 6),
      /**
       * <code>BOOT_CC_SKI = 7;</code>
       */
      BOOT_CC_SKI(6, 7),
      /**
       * <code>BOOT_SNOWSHOE = 8;</code>
       */
      BOOT_SNOWSHOE(7, 8),
      /**
       * <code>OTHER = 9;</code>
       *
       * <pre>
       *Next Value = 10
       * </pre>
       */
      OTHER(8, 9),
      ;

      /**
       * <code>SNOWBOARD = 1;</code>
       */
      public static final int SNOWBOARD_VALUE = 1;
      /**
       * <code>ALPINE_SKI = 2;</code>
       */
      public static final int ALPINE_SKI_VALUE = 2;
      /**
       * <code>CROSS_COUNTRY_SKI = 3;</code>
       */
      public static final int CROSS_COUNTRY_SKI_VALUE = 3;
      /**
       * <code>SNOWSHOES = 4;</code>
       */
      public static final int SNOWSHOES_VALUE = 4;
      /**
       * <code>BOOT_SNOWBOARD = 5;</code>
       */
      public static final int BOOT_SNOWBOARD_VALUE = 5;
      /**
       * <code>BOOT_ALPINE_SKI = 6;</code>
       */
      public static final int BOOT_ALPINE_SKI_VALUE = 6;
      /**
       * <code>BOOT_CC_SKI = 7;</code>
       */
      public static final int BOOT_CC_SKI_VALUE = 7;
      /**
       * <code>BOOT_SNOWSHOE = 8;</code>
       */
      public static final int BOOT_SNOWSHOE_VALUE = 8;
      /**
       * <code>OTHER = 9;</code>
       *
       * <pre>
       *Next Value = 10
       * </pre>
       */
      public static final int OTHER_VALUE = 9;


      public final int getNumber() { return value; }

      public static gearType valueOf(int value) {
        switch (value) {
          case 1: return SNOWBOARD;
          case 2: return ALPINE_SKI;
          case 3: return CROSS_COUNTRY_SKI;
          case 4: return SNOWSHOES;
          case 5: return BOOT_SNOWBOARD;
          case 6: return BOOT_ALPINE_SKI;
          case 7: return BOOT_CC_SKI;
          case 8: return BOOT_SNOWSHOE;
          case 9: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<gearType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<gearType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<gearType>() {
              public gearType findValueByNumber(int number) {
                return gearType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return TestEquipment.Equipment.getDescriptor().getEnumTypes().get(0);
      }

      private static final gearType[] VALUES = values();

      public static gearType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private gearType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Equipment.gearType)
    }

    private int bitField0_;
    public static final int _ID_FIELD_NUMBER = 1;
    private int Id_;
    /**
     * <code>required int32 _id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 _id = 1;</code>
     */
    public int getId() {
      return Id_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private TestEquipment.Equipment.gearType type_;
    /**
     * <code>optional .Equipment.gearType type = 2;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .Equipment.gearType type = 2;</code>
     */
    public TestEquipment.Equipment.gearType getType() {
      return type_;
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private int size_;
    /**
     * <code>optional int32 size = 3;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 size = 3;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int SERIAL_FIELD_NUMBER = 4;
    private java.lang.Object serial_;
    /**
     * <code>optional string serial = 4;</code>
     */
    public boolean hasSerial() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string serial = 4;</code>
     */
    public java.lang.String getSerial() {
      java.lang.Object ref = serial_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          serial_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string serial = 4;</code>
     */
    public com.google.protobuf.ByteString
        getSerialBytes() {
      java.lang.Object ref = serial_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serial_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STOCK_NUM_FIELD_NUMBER = 5;
    private java.lang.Object stockNum_;
    /**
     * <code>optional string stock_num = 5;</code>
     */
    public boolean hasStockNum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string stock_num = 5;</code>
     */
    public java.lang.String getStockNum() {
      java.lang.Object ref = stockNum_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          stockNum_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string stock_num = 5;</code>
     */
    public com.google.protobuf.ByteString
        getStockNumBytes() {
      java.lang.Object ref = stockNum_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stockNum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      Id_ = 0;
      type_ = TestEquipment.Equipment.gearType.SNOWBOARD;
      size_ = 0;
      serial_ = "";
      stockNum_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, Id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSerialBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getStockNumBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, Id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSerialBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getStockNumBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TestEquipment.Equipment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TestEquipment.Equipment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TestEquipment.Equipment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TestEquipment.Equipment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TestEquipment.Equipment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TestEquipment.Equipment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TestEquipment.Equipment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TestEquipment.Equipment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TestEquipment.Equipment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TestEquipment.Equipment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TestEquipment.Equipment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Equipment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Equipment)
        TestEquipment.EquipmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestEquipment.internal_static_Equipment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestEquipment.internal_static_Equipment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TestEquipment.Equipment.class, TestEquipment.Equipment.Builder.class);
      }

      // Construct using TestEquipment.Equipment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        Id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = TestEquipment.Equipment.gearType.SNOWBOARD;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        serial_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        stockNum_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestEquipment.internal_static_Equipment_descriptor;
      }

      public TestEquipment.Equipment getDefaultInstanceForType() {
        return TestEquipment.Equipment.getDefaultInstance();
      }

      public TestEquipment.Equipment build() {
        TestEquipment.Equipment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TestEquipment.Equipment buildPartial() {
        TestEquipment.Equipment result = new TestEquipment.Equipment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.Id_ = Id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.serial_ = serial_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.stockNum_ = stockNum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TestEquipment.Equipment) {
          return mergeFrom((TestEquipment.Equipment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TestEquipment.Equipment other) {
        if (other == TestEquipment.Equipment.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasSerial()) {
          bitField0_ |= 0x00000008;
          serial_ = other.serial_;
          onChanged();
        }
        if (other.hasStockNum()) {
          bitField0_ |= 0x00000010;
          stockNum_ = other.stockNum_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TestEquipment.Equipment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TestEquipment.Equipment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int Id_ ;
      /**
       * <code>required int32 _id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 _id = 1;</code>
       */
      public int getId() {
        return Id_;
      }
      /**
       * <code>required int32 _id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        Id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 _id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        Id_ = 0;
        onChanged();
        return this;
      }

      private TestEquipment.Equipment.gearType type_ = TestEquipment.Equipment.gearType.SNOWBOARD;
      /**
       * <code>optional .Equipment.gearType type = 2;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .Equipment.gearType type = 2;</code>
       */
      public TestEquipment.Equipment.gearType getType() {
        return type_;
      }
      /**
       * <code>optional .Equipment.gearType type = 2;</code>
       */
      public Builder setType(TestEquipment.Equipment.gearType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .Equipment.gearType type = 2;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = TestEquipment.Equipment.gearType.SNOWBOARD;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>optional int32 size = 3;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 3;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serial_ = "";
      /**
       * <code>optional string serial = 4;</code>
       */
      public boolean hasSerial() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string serial = 4;</code>
       */
      public java.lang.String getSerial() {
        java.lang.Object ref = serial_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            serial_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string serial = 4;</code>
       */
      public com.google.protobuf.ByteString
          getSerialBytes() {
        java.lang.Object ref = serial_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serial_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string serial = 4;</code>
       */
      public Builder setSerial(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serial_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial = 4;</code>
       */
      public Builder clearSerial() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serial_ = getDefaultInstance().getSerial();
        onChanged();
        return this;
      }
      /**
       * <code>optional string serial = 4;</code>
       */
      public Builder setSerialBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        serial_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object stockNum_ = "";
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public boolean hasStockNum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public java.lang.String getStockNum() {
        java.lang.Object ref = stockNum_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            stockNum_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public com.google.protobuf.ByteString
          getStockNumBytes() {
        java.lang.Object ref = stockNum_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stockNum_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public Builder setStockNum(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        stockNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public Builder clearStockNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        stockNum_ = getDefaultInstance().getStockNum();
        onChanged();
        return this;
      }
      /**
       * <code>optional string stock_num = 5;</code>
       */
      public Builder setStockNumBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        stockNum_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Equipment)
    }

    static {
      defaultInstance = new Equipment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Equipment)
  }

  public interface equipment_listOrBuilder extends
      // @@protoc_insertion_point(interface_extends:equipment_list)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    java.util.List<TestEquipment.Equipment> 
        getItemList();
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    TestEquipment.Equipment getItem(int index);
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    int getItemCount();
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    java.util.List<? extends TestEquipment.EquipmentOrBuilder> 
        getItemOrBuilderList();
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    TestEquipment.EquipmentOrBuilder getItemOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code equipment_list}
   */
  public static final class equipment_list extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:equipment_list)
      equipment_listOrBuilder {
    // Use equipment_list.newBuilder() to construct.
    private equipment_list(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private equipment_list(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final equipment_list defaultInstance;
    public static equipment_list getDefaultInstance() {
      return defaultInstance;
    }

    public equipment_list getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private equipment_list(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                item_ = new java.util.ArrayList<TestEquipment.Equipment>();
                mutable_bitField0_ |= 0x00000001;
              }
              item_.add(input.readMessage(TestEquipment.Equipment.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = java.util.Collections.unmodifiableList(item_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return TestEquipment.internal_static_equipment_list_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return TestEquipment.internal_static_equipment_list_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              TestEquipment.equipment_list.class, TestEquipment.equipment_list.Builder.class);
    }

    public static com.google.protobuf.Parser<equipment_list> PARSER =
        new com.google.protobuf.AbstractParser<equipment_list>() {
      public equipment_list parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new equipment_list(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<equipment_list> getParserForType() {
      return PARSER;
    }

    public static final int ITEM_FIELD_NUMBER = 1;
    private java.util.List<TestEquipment.Equipment> item_;
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    public java.util.List<TestEquipment.Equipment> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    public java.util.List<? extends TestEquipment.EquipmentOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    public TestEquipment.Equipment getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .Equipment item = 1;</code>
     */
    public TestEquipment.EquipmentOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }

    private void initFields() {
      item_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getItemCount(); i++) {
        if (!getItem(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(1, item_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, item_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static TestEquipment.equipment_list parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TestEquipment.equipment_list parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TestEquipment.equipment_list parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static TestEquipment.equipment_list parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static TestEquipment.equipment_list parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TestEquipment.equipment_list parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static TestEquipment.equipment_list parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static TestEquipment.equipment_list parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static TestEquipment.equipment_list parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static TestEquipment.equipment_list parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(TestEquipment.equipment_list prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code equipment_list}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:equipment_list)
        TestEquipment.equipment_listOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return TestEquipment.internal_static_equipment_list_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return TestEquipment.internal_static_equipment_list_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                TestEquipment.equipment_list.class, TestEquipment.equipment_list.Builder.class);
      }

      // Construct using TestEquipment.equipment_list.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getItemFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return TestEquipment.internal_static_equipment_list_descriptor;
      }

      public TestEquipment.equipment_list getDefaultInstanceForType() {
        return TestEquipment.equipment_list.getDefaultInstance();
      }

      public TestEquipment.equipment_list build() {
        TestEquipment.equipment_list result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public TestEquipment.equipment_list buildPartial() {
        TestEquipment.equipment_list result = new TestEquipment.equipment_list(this);
        int from_bitField0_ = bitField0_;
        if (itemBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            item_ = java.util.Collections.unmodifiableList(item_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.item_ = item_;
        } else {
          result.item_ = itemBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof TestEquipment.equipment_list) {
          return mergeFrom((TestEquipment.equipment_list)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(TestEquipment.equipment_list other) {
        if (other == TestEquipment.equipment_list.getDefaultInstance()) return this;
        if (itemBuilder_ == null) {
          if (!other.item_.isEmpty()) {
            if (item_.isEmpty()) {
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemIsMutable();
              item_.addAll(other.item_);
            }
            onChanged();
          }
        } else {
          if (!other.item_.isEmpty()) {
            if (itemBuilder_.isEmpty()) {
              itemBuilder_.dispose();
              itemBuilder_ = null;
              item_ = other.item_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemFieldBuilder() : null;
            } else {
              itemBuilder_.addAllMessages(other.item_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getItemCount(); i++) {
          if (!getItem(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        TestEquipment.equipment_list parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (TestEquipment.equipment_list) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<TestEquipment.Equipment> item_ =
        java.util.Collections.emptyList();
      private void ensureItemIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          item_ = new java.util.ArrayList<TestEquipment.Equipment>(item_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          TestEquipment.Equipment, TestEquipment.Equipment.Builder, TestEquipment.EquipmentOrBuilder> itemBuilder_;

      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public java.util.List<TestEquipment.Equipment> getItemList() {
        if (itemBuilder_ == null) {
          return java.util.Collections.unmodifiableList(item_);
        } else {
          return itemBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public int getItemCount() {
        if (itemBuilder_ == null) {
          return item_.size();
        } else {
          return itemBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public TestEquipment.Equipment getItem(int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);
        } else {
          return itemBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder setItem(
          int index, TestEquipment.Equipment value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.set(index, value);
          onChanged();
        } else {
          itemBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder setItem(
          int index, TestEquipment.Equipment.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder addItem(TestEquipment.Equipment value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(value);
          onChanged();
        } else {
          itemBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder addItem(
          int index, TestEquipment.Equipment value) {
        if (itemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemIsMutable();
          item_.add(index, value);
          onChanged();
        } else {
          itemBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder addItem(
          TestEquipment.Equipment.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder addItem(
          int index, TestEquipment.Equipment.Builder builderForValue) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends TestEquipment.Equipment> values) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, item_);
          onChanged();
        } else {
          itemBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder clearItem() {
        if (itemBuilder_ == null) {
          item_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public Builder removeItem(int index) {
        if (itemBuilder_ == null) {
          ensureItemIsMutable();
          item_.remove(index);
          onChanged();
        } else {
          itemBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public TestEquipment.Equipment.Builder getItemBuilder(
          int index) {
        return getItemFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public TestEquipment.EquipmentOrBuilder getItemOrBuilder(
          int index) {
        if (itemBuilder_ == null) {
          return item_.get(index);  } else {
          return itemBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public java.util.List<? extends TestEquipment.EquipmentOrBuilder> 
           getItemOrBuilderList() {
        if (itemBuilder_ != null) {
          return itemBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(item_);
        }
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public TestEquipment.Equipment.Builder addItemBuilder() {
        return getItemFieldBuilder().addBuilder(
            TestEquipment.Equipment.getDefaultInstance());
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public TestEquipment.Equipment.Builder addItemBuilder(
          int index) {
        return getItemFieldBuilder().addBuilder(
            index, TestEquipment.Equipment.getDefaultInstance());
      }
      /**
       * <code>repeated .Equipment item = 1;</code>
       */
      public java.util.List<TestEquipment.Equipment.Builder> 
           getItemBuilderList() {
        return getItemFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          TestEquipment.Equipment, TestEquipment.Equipment.Builder, TestEquipment.EquipmentOrBuilder> 
          getItemFieldBuilder() {
        if (itemBuilder_ == null) {
          itemBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              TestEquipment.Equipment, TestEquipment.Equipment.Builder, TestEquipment.EquipmentOrBuilder>(
                  item_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          item_ = null;
        }
        return itemBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:equipment_list)
    }

    static {
      defaultInstance = new equipment_list(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:equipment_list)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Equipment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Equipment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_equipment_list_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_equipment_list_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024test_equipment.proto\"\226\002\n\tEquipment\022\013\n\003" +
      "_id\030\001 \002(\005\022!\n\004type\030\002 \001(\0162\023.Equipment.gear" +
      "Type\022\014\n\004size\030\003 \001(\005\022\016\n\006serial\030\004 \001(\t\022\021\n\tst" +
      "ock_num\030\005 \001(\t\"\247\001\n\010gearType\022\r\n\tSNOWBOARD\020" +
      "\001\022\016\n\nALPINE_SKI\020\002\022\025\n\021CROSS_COUNTRY_SKI\020\003" +
      "\022\r\n\tSNOWSHOES\020\004\022\022\n\016BOOT_SNOWBOARD\020\005\022\023\n\017B" +
      "OOT_ALPINE_SKI\020\006\022\017\n\013BOOT_CC_SKI\020\007\022\021\n\rBOO" +
      "T_SNOWSHOE\020\010\022\t\n\005OTHER\020\t\"*\n\016equipment_lis" +
      "t\022\030\n\004item\030\001 \003(\0132\n.Equipment"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Equipment_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Equipment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Equipment_descriptor,
        new java.lang.String[] { "Id", "Type", "Size", "Serial", "StockNum", });
    internal_static_equipment_list_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_equipment_list_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_equipment_list_descriptor,
        new java.lang.String[] { "Item", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
